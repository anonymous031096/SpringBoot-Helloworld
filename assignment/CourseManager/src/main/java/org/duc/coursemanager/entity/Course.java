package org.duc.coursemanager.entity;
// Generated Mar 7, 2018 12:51:53 PM by Hibernate Tools 3.5.0.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Proxy;

import com.fasterxml.jackson.annotation.JsonMerge;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "course", catalog = "course_manager")
@Proxy(lazy = false)
public class Course implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String name;
	private Date timeStart;
	private Date timeEnd;
	private Set<Student> students = new HashSet<Student>(0);

	public Course() {
	}

	public Course(String name, Date timeStart, Date timeEnd) {
		this.name = name;
		this.timeStart = timeStart;
		this.timeEnd = timeEnd;
	}

	public Course(String name, Date timeStart, Date timeEnd, Set<Student> students) {
		this.name = name;
		this.timeStart = timeStart;
		this.timeEnd = timeEnd;
		this.students = students;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "time_start", nullable = false, length = 10)
	public Date getTimeStart() {
		return this.timeStart;
	}

	public void setTimeStart(Date timeStart) {
		this.timeStart = timeStart;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "time_end", nullable = false, length = 10)
	public Date getTimeEnd() {
		return this.timeEnd;
	}

	public void setTimeEnd(Date timeEnd) {
		this.timeEnd = timeEnd;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "registration", catalog = "course_manager", joinColumns = {
			@JoinColumn(name = "id_course", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_student", nullable = false, updatable = false) })
	@JsonMerge
	public Set<Student> getStudents() {
		return this.students;
	}

	public void setStudents(Set<Student> students) {
		this.students = students;
	}

}
