package org.duc.conceptualbank.entity;
// Generated Feb 7, 2018 5:37:51 PM by Hibernate Tools 5.2.8.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Proxy;

/**
 * Customers generated by hbm2java
 */
@Entity
@Table(name = "customers", catalog = "conceptual_bank")
@Proxy(lazy = false)
public class Customers implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer customerNr;
	private CustomerType customerType;
	private String name;
	private String address;
	private String postCode;
	private String phoneNr;
	private String customerDetails;
	private Set<Accounts> accountses = new HashSet<Accounts>(0);

	public Customers() {
	}

	public Customers(CustomerType customerType) {
		this.customerType = customerType;
	}

	public Customers(CustomerType customerType, String name, String address, String postCode, String phoneNr,
			String customerDetails, Set<Accounts> accountses) {
		this.customerType = customerType;
		this.name = name;
		this.address = address;
		this.postCode = postCode;
		this.phoneNr = phoneNr;
		this.customerDetails = customerDetails;
		this.accountses = accountses;
	}

	public Customers(CustomerType customerType, String name, String address, String postCode, String phoneNr,
			String customerDetails) {
		this.customerType = customerType;
		this.name = name;
		this.address = address;
		this.postCode = postCode;
		this.phoneNr = phoneNr;
		this.customerDetails = customerDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "customer_nr", unique = true, nullable = false)
	public Integer getCustomerNr() {
		return this.customerNr;
	}

	public void setCustomerNr(Integer customerNr) {
		this.customerNr = customerNr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_type_code", nullable = false)
	public CustomerType getCustomerType() {
		return this.customerType;
	}

	public void setCustomerType(CustomerType customerType) {
		this.customerType = customerType;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "address", length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "post_code", length = 45)
	public String getPostCode() {
		return this.postCode;
	}

	public void setPostCode(String postCode) {
		this.postCode = postCode;
	}

	@Column(name = "phone_nr", length = 45)
	public String getPhoneNr() {
		return this.phoneNr;
	}

	public void setPhoneNr(String phoneNr) {
		this.phoneNr = phoneNr;
	}

	@Column(name = "customer_details", length = 45)
	public String getCustomerDetails() {
		return this.customerDetails;
	}

	public void setCustomerDetails(String customerDetails) {
		this.customerDetails = customerDetails;
	}

	@ManyToMany(fetch = FetchType.EAGER,cascade ={CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
	@JoinTable(name = "customer_account", catalog = "conceptual_bank", joinColumns = {
			@JoinColumn(name = "customer_nr", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "account_nr", nullable = false, updatable = false) })
	public Set<Accounts> getAccountses() {
		return this.accountses;
	}

	public void setAccountses(Set<Accounts> accountses) {
		this.accountses = accountses;
	}

	public String toString() {
		return "Customer: " + customerNr + "\tCustomer type code: " + customerType.getCustomerTypeCode() + "\tName: "
				+ name + "\tAddress: " + address + "\tPost code: " + postCode + "\tPhone: " + phoneNr
				+ "\tCustomer details: " + customerDetails;
	}
}
